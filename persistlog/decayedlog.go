package persistlog

import (
	"sync"

	"github.com/lightningnetwork/lnd/channeldb"
)

const (
	// sharedHashSize is the size in bytes of the keys we will be storing
	// in the DecayedLog. It represents the first 20 bytes of a truncated
	// sha-256 hash of a secret generated by ECDH.
	sharedHashSize = 20
)

// DecayedLog implements the PersistLog interface. It stores the first
// sharedHashSize bytes of a sha256-hashed shared secret along with a node's
// CLTV value. It is a decaying log meaning there will be a garbage collector
// to collect entries which are expired according to their stored CLTV value
// and the current block height.
type DecayedLog struct {
	sync.RWMutex
	db *channeldb.DB // TODO(eugene) Is this correct?
}

// A compile time check to see if DecayedLog adheres to the PersistLog
// interface.
var _ PersistLog = (*DecayedLog)(nil)

// Delete ...
func (d *DecayedLog) Delete(hash []byte) error {
	return nil
}

// Get ...
func (d *DecayedLog) Get(hash []byte) (uint32, error) {
	return 0, nil
}

// Put ...
func (d *DecayedLog) Put(hash []byte, value uint32) error {
	return nil
}

// Start ...
func (d *DecayedLog) Start() error {
	return nil
}

// Stop ...
func (d *DecayedLog) Stop() error {
	return nil
}
